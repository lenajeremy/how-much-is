// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma" // Ensure client is generated in a location accessible by API routes
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model State {
  id     Int    @id @default(autoincrement())
  name   String @unique
  cities City[]
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  stateId   Int
  state     State    @relation(fields: [stateId], references: [id])
  markets   Market[]
  latitude  Float? // For map view REQ-07
  longitude Float? // For map view REQ-07

  @@unique([name, stateId])
}

model Market {
  id           Int           @id @default(autoincrement())
  name         String
  cityId       Int
  city         City          @relation(fields: [cityId], references: [id])
  priceReports PriceReport[]

  @@unique([name, cityId])
}

model Item {
  id           Int           @id @default(autoincrement())
  name         String        @unique // e.g., "Rice - Foreign, Bag (50kg)" REQ-09
  units        Unit[]
  priceReports PriceReport[]
}

model Unit {
  id           Int           @id @default(autoincrement())
  name         String // e.g., "Bag (50kg)", "Paint Bucket" REQ-09
  itemId       Int
  item         Item          @relation(fields: [itemId], references: [id])
  priceReports PriceReport[]

  @@unique([name, itemId])
}

model PriceReport {
  id        Int      @id @default(autoincrement())
  price     Float // Naira REQ-02
  itemId    Int
  item      Item     @relation(fields: [itemId], references: [id])
  unitId    Int
  unit      Unit     @relation(fields: [unitId], references: [id])
  marketId  Int
  market    Market   @relation(fields: [marketId], references: [id])
  createdAt DateTime @default(now()) // REQ-04
  updatedAt DateTime @updatedAt
}
